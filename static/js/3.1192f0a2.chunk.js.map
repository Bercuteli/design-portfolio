{"version":3,"sources":["images/image-gallery.svg","enums/previewTypes.ts","containers/ViewTabs/assets.ts","containers/ViewTabs/ViewTabs.style.ts","containers/ViewTabs/ViewTabs.tsx","components/ImageView/ImageView.style.ts","enums/mediaQueries.ts","components/ImageView/ImageView.tsx","components/NoImage/NoImage.style.ts","components/NoImage/NoImage.tsx","containers/Preview/Preview.style.ts","containers/Preview/Preview.tsx","pages/Project/Project.style.ts","pages/Project/Project.tsx","pages/Project/index.ts"],"names":["module","exports","PreviewTypes","PreviewTitles","tabs","name","sketch","title","design","prototype","Wrapper","styled","div","ViewTabs","useParams","projectName","previewType","currentTab","map","tab","url","RoutesUI","projectPath","className","clsx","active","to","key","MediaQueries","sizes","media","desktop","size","ImageSizes","origin","laptop","tabletLandscape","middle","tabletPortrait","mobileLandscape","small","mobilePortrait","ImageView","imageSet","sources","item","srcSet","originName","src","alt","NoImage","message","Image","Preview","project","projects","find","p","id","selectedPreview","showImage","showImageView","showNoImageView","Project"],"mappings":"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","file":"static/js/3.1192f0a2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image-gallery.656fc865.svg\";","export enum PreviewTypes {\n  sketch = 'sketch',\n  design = 'design',\n  prototype = 'prototype',\n}\n\nexport enum PreviewTitles {\n  sketch = 'Sketch',\n  design = 'Design',\n  prototype = 'HTML Prototype',\n};\n","import { PreviewTypes, PreviewTitles } from '../../enums/previewTypes';\n\nexport const tabs = [\n  { name: PreviewTypes.sketch, title: PreviewTitles.sketch },\n  { name: PreviewTypes.design, title: PreviewTitles.design },\n  { name: PreviewTypes.prototype, title: PreviewTitles.prototype },\n];\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0 16px 16px 16px;\n  \n  .item {\n    padding: 0 16px 10px 16px;\n    font-weight: bold;\n    position: relative;\n    display: inline-block;\n    \n    &:after {\n      content: \"\";\n      position: absolute;\n      bottom: 0;\n      right: 0;\n      width: 0;\n      height: 4px;\n      background: var(--color-bg-accent);\n      transition: width 250ms;\n    }\n    \n    &.active {\n      &:after {\n        left: 0;\n        right: auto;\n        width: 100%;\n      }\n    }  \n  }\n`;\n","import React, { FC } from 'react';\nimport clsx from 'clsx';\nimport { useParams, NavLink } from 'react-router-dom';\n\nimport { tabs } from './assets';\nimport { Wrapper } from './ViewTabs.style';\nimport { PreviewTypes } from '../../enums/previewTypes';\nimport { RoutesUI } from '../../enums/routes';\n\nconst ViewTabs: FC = () => {\n  const {\n    projectName,\n    previewType = PreviewTypes.design,\n  } = useParams();\n\n  const currentTab: PreviewTypes = previewType as PreviewTypes;\n\n  return (\n    <Wrapper>\n      {tabs.map(tab => {\n        const { name, title } = tab;\n        const url = `${RoutesUI.projectPath}/${projectName}/${name}`;\n        const className = clsx('item', {\n          active: name === currentTab,\n        });\n\n        return (\n          <NavLink to={url} key={name} className={className}>\n            {title}\n          </NavLink>\n        )\n      })}\n    </Wrapper>\n  );\n};\n\nexport default ViewTabs;\nexport { ViewTabs };\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  \n  img {\n    height: calc(100vh - 200px);\n    width: auto;\n    max-width: calc(100vw - 400px);\n    object-fit: contain;\n    object-position: center;\n  }\n`;\n","export enum MediaQueries {\n  mobilePortrait = '(max-width: 320px)',\n  mobileLandscape = '(min-width: 321px) and (max-width: 568px)',\n  tabletPortrait = '(min-width: 569px) and (max-width: 768px)',\n  tabletLandscape = '(min-width: 769px) and (max-width: 1024px)',\n  laptop = '(min-width: 1025px) and (max-width: 1440px)',\n  desktop = '(min-width: 1441px)',\n}\n","import React, { FC } from 'react';\nimport { Wrapper } from './ImageView.style';\nimport { ImageSet } from '../../interfaces/project.interface';\nimport { MediaQueries } from '../../enums/mediaQueries';\nimport { ImageSizes } from '../../enums/imageSizes';\n\ninterface Props {\n  imageSet: ImageSet;\n}\n\nconst sizes = [\n  { media: MediaQueries.desktop, size: ImageSizes.origin },\n  { media: MediaQueries.laptop, size: ImageSizes.origin },\n  { media: MediaQueries.tabletLandscape, size: ImageSizes.middle },\n  { media: MediaQueries.tabletPortrait, size: ImageSizes.middle },\n  { media: MediaQueries.mobileLandscape, size: ImageSizes.small },\n  { media: MediaQueries.mobilePortrait, size: ImageSizes.small },\n]\n\nconst ImageView: FC<Props> = ({ imageSet }) => {\n\n  const sources = sizes.map(item => {\n    const { media, size } = item;\n    const srcSet = imageSet[size];\n\n    return (\n      <source\n        key={media}\n        srcSet={srcSet}\n        media={media}\n      />\n    );\n  });\n\n  const originName = imageSet[ImageSizes.origin];\n\n  return (\n    <Wrapper>\n      <picture>\n        {sources}\n        <img src={originName} alt=\"Preview\" />\n      </picture>\n    </Wrapper>\n  );\n};\n\nexport default ImageView;\nexport { ImageView };\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n  \n  .container {\n     display: block;\n    \n    .image {\n      text-align: center;\n       \n      img {\n        width: 240px;\n        opacity: 0.5;\n      }\n    }\n    \n    .message {\n      padding: 32px;\n      text-align: center;\n      font-size: 1.5rem;\n      color: var(--color-text-secondary);\n    }\n  }\n`;\n","import React, { FC } from 'react';\n\nimport Image from '../../images/image-gallery.svg';\nimport { Wrapper } from './NoImage.style';\n\ninterface Props {\n  message?: string;\n}\n\nconst defaultMessage = 'There is no image but we are working hard to add it';\n\nconst NoImage: FC<Props> = ({ message = defaultMessage}) => {\n\n  return (\n    <Wrapper>\n      <div className=\"container\">\n        <div className=\"image\">\n          <img src={Image} alt={message} />\n        </div>\n        <div className=\"message\">{message}</div>\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default NoImage;\nexport { NoImage };\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 16px 32px 50px 32px;\n  min-height: calc(100vh - 200px);\n  border: 16px solid var(--color-border-monitor);\n  border-radius: .5em;\n  position: relative;\n  \n  &:before {\n    content:\"\";\n    display:block;\n    position:absolute;\n    background: var(--color-border-stand);\n    width: 150px;\n    height: 48px;\n    top: calc(100% + 16px);\n  }\n  &:after {\n     content:\"\";\n     display:block;\n     position:absolute;\n     background:var(--color-border-monitor);\n     border-top-left-radius:.5em;\n     border-top-right-radius:.5em;\n     width: 300px;\n     height: 16px;\n     top: calc(100% + 48px);\n  }\n`;\n","import React, { FC } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { ImageSet, Project } from '../../interfaces/project.interface';\nimport { PreviewTypes } from '../../enums/previewTypes';\nimport { projects } from '../../projects/projects';\n\nimport { ImageView } from '../../components/ImageView';\nimport { NoImage } from '../../components/NoImage';\nimport { Wrapper } from './Preview.style';\n\nconst Preview: FC = () => {\n  const {\n    projectName,\n    previewType = PreviewTypes.design,\n  } = useParams();\n\n  const project = projects.find(p => {\n    return p.id === projectName;\n  });\n\n  if (!project) {\n    return null;\n  }\n\n  const selectedPreview: PreviewTypes = previewType as PreviewTypes;\n  const imageSet = project[selectedPreview as keyof Project];\n  const showImage = (selectedPreview === PreviewTypes.sketch || selectedPreview === PreviewTypes.design);\n\n  const showImageView = (showImage && imageSet);\n  const showNoImageView = (showImage && !imageSet);\n\n  return (\n    <Wrapper>\n      {showImageView && (\n        <ImageView imageSet={imageSet as ImageSet} />\n      )}\n      {showNoImageView && (\n        <NoImage />\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Preview;\nexport { Preview };\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: block;\n  flex-grow: 1;\n  \n  .content {\n    max-height: calc(100vh - 100px);\n    max-width: calc(100vw - 300px);\n    overflow-y: auto;\n  }\n`;\n","import React, { FC } from 'react';\n\nimport { ViewTabs } from '../../containers/ViewTabs';\nimport { Preview } from '../../containers/Preview';\nimport { Wrapper } from './Project.style';\n\nconst Project: FC = () => {\n\n  return (\n    <Wrapper>\n      <ViewTabs />\n      <div className=\"content\">\n        <Preview />\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default Project;\nexport { Project };\n","import { Project } from './Project';\n\nexport default Project;\nexport { Project };\n"],"sourceRoot":""}