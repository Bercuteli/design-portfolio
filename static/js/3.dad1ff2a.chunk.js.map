{"version":3,"sources":["images/image-gallery.svg","enums/previewTypes.ts","containers/ViewTabs/assets.ts","containers/ViewTabs/ViewTabs.style.ts","containers/ViewTabs/ViewTabs.tsx","components/ImageView/ImageView.style.ts","components/ImageView/ImageView.tsx","components/NoImage/NoImage.style.ts","components/NoImage/NoImage.tsx","containers/Preview/Preview.style.ts","containers/Preview/Preview.tsx","pages/Project/Project.style.ts","pages/Project/Project.tsx","pages/Project/index.ts"],"names":["module","exports","PreviewTypes","PreviewTitles","tabs","name","sketch","title","design","prototype","Wrapper","styled","div","ViewTabs","useParams","projectName","previewType","currentTab","map","tab","url","RoutesUI","projectPath","className","clsx","active","to","key","ImageView","src","alt","NoImage","message","Image","Preview","project","projects","find","p","id","selectedPreview","view","showImage","showImageView","showNoImageView","Project"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,2C,mFCA/BC,EAMAC,E,gDANAD,K,gBAAAA,E,gBAAAA,E,uBAAAA,M,cAMAC,K,gBAAAA,E,gBAAAA,E,4BAAAA,M,KCJL,IAAMC,EAAO,CAClB,CAAEC,KAAMH,EAAaI,OAAQC,MAAOJ,EAAcG,QAClD,CAAED,KAAMH,EAAaM,OAAQD,MAAOJ,EAAcK,QAClD,CAAEH,KAAMH,EAAaO,UAAWF,MAAOJ,EAAcM,Y,mnBCHhD,IAAMC,EAAUC,IAAOC,IAAV,K,QCOdC,EAAe,WAAO,IAAD,EAIrBC,cAFFC,EAFuB,EAEvBA,YAFuB,IAGvBC,YAGIC,OANmB,MAGTf,EAAaM,OAHJ,EAQzB,OACE,kBAACE,EAAD,KACGN,EAAKc,KAAI,SAAAC,GAAQ,IACRd,EAAgBc,EAAhBd,KAAME,EAAUY,EAAVZ,MACRa,EAAG,UAAMC,IAASC,YAAf,YAA8BP,EAA9B,YAA6CV,GAChDkB,EAAYC,YAAK,OAAQ,CAC7BC,OAAQpB,IAASY,IAGnB,OACE,kBAAC,IAAD,CAASS,GAAIN,EAAKO,IAAKtB,EAAMkB,UAAWA,GACrChB,Q,4PC1BN,IAAMG,EAAUC,IAAOC,IAAV,KCKdgB,EAAuB,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAE9B,OACE,kBAAC,EAAD,KACE,yBAAKA,IAAKA,EAAKC,IAAI,c,ogBCTlB,IAAMpB,EAAUC,IAAOC,IAAV,KCSdmB,EAAqB,SAAC,GAAiC,IAAD,IAA9BC,eAA8B,MAFrC,sDAEqC,EAE1D,OACE,kBAAC,EAAD,KACE,yBAAKT,UAAU,aACb,yBAAKA,UAAU,SACb,yBAAKM,IAAKI,IAAOH,IAAKE,KAExB,yBAAKT,UAAU,WAAWS,M,mwBCjB3B,IAAMtB,EAAUC,IAAOC,IAAV,KCSdsB,EAAc,WAAO,IAAD,EAIpBpB,cAFFC,EAFsB,EAEtBA,YAFsB,IAGtBC,mBAHsB,MAGRd,EAAaM,OAHL,EAMlB2B,EAAUC,IAASC,MAAK,SAAAC,GAC5B,OAAOA,EAAEC,KAAOxB,KAGlB,IAAKoB,EACH,OAAO,KAGT,IAAMK,EAAgCxB,EAChCyB,EAAON,EAAQK,GACfE,EAAaF,IAAoBtC,EAAaI,QAAUkC,IAAoBtC,EAAaM,OAEzFmC,EAAiBD,GAAaD,EAC9BG,EAAmBF,IAAcD,EAEvC,OACE,kBAAC,EAAD,KACGE,GACC,kBAAC,EAAD,CAAWd,IAAKY,IAEjBG,GACC,kBAAC,EAAD,Q,+LCpCD,IAAMlC,EAAUC,IAAOC,IAAV,KCIdiC,EAAU,WAEd,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,yBAAKtB,UAAU,WACb,kBAAC,EAAD,SCVOsB","file":"static/js/3.dad1ff2a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image-gallery.656fc865.svg\";","export enum PreviewTypes {\n  sketch = 'sketch',\n  design = 'design',\n  prototype = 'prototype',\n}\n\nexport enum PreviewTitles {\n  sketch = 'Sketch',\n  design = 'Design',\n  prototype = 'HTML Prototype',\n};\n","import { PreviewTypes, PreviewTitles } from '../../enums/previewTypes';\n\nexport const tabs = [\n  { name: PreviewTypes.sketch, title: PreviewTitles.sketch },\n  { name: PreviewTypes.design, title: PreviewTitles.design },\n  { name: PreviewTypes.prototype, title: PreviewTitles.prototype },\n];\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0 16px 16px 16px;\n  \n  .item {\n    padding: 0 16px 10px 16px;\n    font-weight: bold;\n    position: relative;\n    display: inline-block;\n    \n    &:after {\n      content: \"\";\n      position: absolute;\n      bottom: 0;\n      right: 0;\n      width: 0;\n      height: 4px;\n      background: var(--color-bg-accent);\n      transition: width 250ms;\n    }\n    \n    &.active {\n      &:after {\n        left: 0;\n        right: auto;\n        width: 100%;\n      }\n    }  \n  }\n`;\n","import React, { FC } from 'react';\nimport clsx from 'clsx';\nimport { useParams, NavLink } from 'react-router-dom';\n\nimport { tabs } from './assets';\nimport { Wrapper } from './ViewTabs.style';\nimport { PreviewTypes } from '../../enums/previewTypes';\nimport { RoutesUI } from '../../enums/routes';\n\nconst ViewTabs: FC = () => {\n  const {\n    projectName,\n    previewType = PreviewTypes.design,\n  } = useParams();\n\n  const currentTab: PreviewTypes = previewType as PreviewTypes;\n\n  return (\n    <Wrapper>\n      {tabs.map(tab => {\n        const { name, title } = tab;\n        const url = `${RoutesUI.projectPath}/${projectName}/${name}`;\n        const className = clsx('item', {\n          active: name === currentTab,\n        });\n\n        return (\n          <NavLink to={url} key={name} className={className}>\n            {title}\n          </NavLink>\n        )\n      })}\n    </Wrapper>\n  );\n};\n\nexport default ViewTabs;\nexport { ViewTabs };\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  \n  img {\n    width: auto;\n    height: calc(100vh - 200px);\n  }\n`;\n","import React, { FC } from 'react';\nimport { Wrapper } from './ImageView.style';\n\ninterface Props {\n  src: string;\n}\n\nconst ImageView: FC<Props> = ({ src }) => {\n\n  return (\n    <Wrapper>\n      <img src={src} alt=\"Preview\" />\n    </Wrapper>\n  );\n};\n\nexport default ImageView;\nexport { ImageView };\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n  \n  .container {\n     display: block;\n    \n    .image {\n      text-align: center;\n       \n      img {\n        width: 240px;\n        opacity: 0.5;\n      }\n    }\n    \n    .message {\n      padding: 32px;\n      text-align: center;\n      font-size: 1.5rem;\n      color: var(--color-text-secondary);\n    }\n  }\n`;\n","import React, { FC } from 'react';\n\nimport Image from '../../images/image-gallery.svg';\nimport { Wrapper } from './NoImage.style';\n\ninterface Props {\n  message?: string;\n}\n\nconst defaultMessage = 'There is no image but we are working hard to add it';\n\nconst NoImage: FC<Props> = ({ message = defaultMessage}) => {\n\n  return (\n    <Wrapper>\n      <div className=\"container\">\n        <div className=\"image\">\n          <img src={Image} alt={message} />\n        </div>\n        <div className=\"message\">{message}</div>\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default NoImage;\nexport { NoImage };\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 16px 32px 50px 32px;\n  min-height: calc(100vh - 200px);\n  border: 16px solid var(--color-border-monitor);\n  border-radius: .5em;\n  position: relative;\n  \n  &:before {\n    content:\"\";\n    display:block;\n    position:absolute;\n    background: var(--color-border-stand);\n    width: 150px;\n    height: 48px;\n    top: calc(100% + 16px);\n  }\n  &:after {\n     content:\"\";\n     display:block;\n     position:absolute;\n     background:var(--color-border-monitor);\n     border-top-left-radius:.5em;\n     border-top-right-radius:.5em;\n     width: 300px;\n     height: 16px;\n     top: calc(100% + 48px);\n  }\n`;\n","import React, { FC } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Project } from '../../interfaces/project.interface';\nimport { PreviewTypes } from '../../enums/previewTypes';\nimport { projects } from '../../projects/projects';\n\nimport { ImageView } from '../../components/ImageView';\nimport { NoImage } from '../../components/NoImage';\nimport { Wrapper } from './Preview.style';\n\nconst Preview: FC = () => {\n  const {\n    projectName,\n    previewType = PreviewTypes.design,\n  } = useParams();\n\n  const project = projects.find(p => {\n    return p.id === projectName;\n  });\n\n  if (!project) {\n    return null;\n  }\n\n  const selectedPreview: PreviewTypes = previewType as PreviewTypes;\n  const view = project[selectedPreview as keyof Project];\n  const showImage = (selectedPreview === PreviewTypes.sketch || selectedPreview === PreviewTypes.design);\n\n  const showImageView = (showImage && view);\n  const showNoImageView = (showImage && !view);\n\n  return (\n    <Wrapper>\n      {showImageView && (\n        <ImageView src={view as string} />\n      )}\n      {showNoImageView && (\n        <NoImage />\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Preview;\nexport { Preview };\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: block;\n  flex-grow: 1;\n  \n  .content {\n    max-height: calc(100vh - 100px);\n    overflow-y: auto;\n  }\n`;\n","import React from 'react';\n\nimport { ViewTabs } from '../../containers/ViewTabs';\nimport { Preview } from '../../containers/Preview';\nimport { Wrapper } from './Project.style';\n\nconst Project = () => {\n\n  return (\n    <Wrapper>\n      <ViewTabs />\n      <div className=\"content\">\n        <Preview />\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default Project;\nexport { Project };\n","import { Project } from './Project';\n\nexport default Project;\nexport { Project };\n"],"sourceRoot":""}